name: Release
on:
  workflow_call:
    inputs:
      jekyll_docs:
        description: "Whether the project has Jekyll documentation"
        required: false
        type: boolean
        default: false
      api_docs:
        description: "Whether the project has API documentation"
        required: false
        type: boolean
        default: true
    secrets:
      npm_token:
        description: "The NPM_TOKEN"
        required: true

jobs:
  release:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'
      - name: npm ci
        uses: nick-fields/retry@v2
        with:
          command: npm ci
          timeout_minutes: 3
          max_attempts: 3
        timeout-minutes: 5
      - run: npm run build

      - uses: actions/setup-ruby@v1
        if: ${{ inputs.jekyll_docs == true }}
        with:
          ruby-version: '2.5'
      - name: Generate Jekyll docs
        if: ${{ inputs.jekyll_docs == true }}
        run: |
          gem install bundler
          bundle install --path vendor/bundle
          bundle exec jekyll build
        working-directory: docs

      - name: Generate API docs
        if: ${{ inputs.jekyll_docs == true || inputs.api_docs == true }}
        run: npm run doc-api

      - name: Save documentation as artefact
        uses: actions/upload-pages-artifact@v3
        if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
        with:
          path: ./build/docs

      - name: Release
        id: release
        uses: cycjimmy/semantic-release-action@v3
        with:
          semantic_version: 19.0.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.npm_token }}

  deploy_pages:
    name: Publish documentation
    needs: release
    if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-22.04
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
